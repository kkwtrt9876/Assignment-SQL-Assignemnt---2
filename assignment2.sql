use mavenmovies;
-- Retrieve the total number of rentals made in the Sakila database. 
select count(rental_id) from rental;

-- Find the average rental duration (in days) of movies rented from the Sakila database.
select avg(rental_duration) from film;

-- Display the first name and last name of customers in uppercase. 
select upper(first_name) as FIRST_NAME , upper(last_name) as LAST_NAME	 from customer;


-- Extract the month from the rental date and display it alongside the rental ID. 
select rental_id ,  month(rental_date) from rental;

-- Retrieve the count of rentals for each customer (display customer ID and the count of rentals). 
select customer_id, count(rental_id) as rentals from rental group by customer_id;

-- Find the total revenue generated by each store. 
select staff_id as store, sum(amount) as revenue from payment group by staff_id;

-- Display the title of the movie, customer s first name, and last name who rented it. 
select title , first_name , last_name from film  inner join inventory on film.film_id = inventory.film_id inner join rental on 
inventory.inventory_id = rental.inventory_id inner join customer on rental.customer_id = customer.customer_id;

-- Retrieve the names of all actors who have appeared in the film "Gone with the Wind." 
select concat(actor.first_name," ",actor.last_name) as name from actor inner join film_actor on actor.actor_id = film_actor.actor_id inner join film on
 film_actor.film_id = film.film_id where title = "Gone with the Wind";
 
 -- Determine the total number of rentals for each category of movies.
select category.name as category ,  count(rental.rental_id)  from category inner join film_category on category.category_id = film_category.category_id inner join inventory on 
inventory.film_id = film_category.film_id 
inner join rental on rental.inventory_id = inventory.inventory_id group by category.name;

-- Find the average rental rate of movies in each language.
select language.name , avg(film.rental_rate)  from language inner join film on film.language_id = language.language_id group by film.language_id;

-- Retrieve the customer names along with the total amount they've spent on rentals.
select concat(customer.first_name , " ",customer.last_name) as name, sum(payment.amount) as total from customer inner join payment on
 customer.customer_id = payment.customer_id inner join rental on payment.rental_id = rental.rental_id
group by customer.customer_id;


-- List the titles of movies rented by each customer in a particular city (e.g., 'London').
select concat(first_name," ",last_name) as customer_name, city.city, film.title from city inner join address on address.city_id = city.city_id inner join customer on
 customer.address_id = address.address_id inner join rental on 
rental.customer_id = customer.customer_id inner join inventory on inventory.inventory_id = rental.inventory_id inner join film on film.film_id = inventory.film_id  group by
city.city,film.title,customer_name;


-- Display the top 5 rented movies along with the number of times they've been rented.
select film.title , count(inventory.inventory_id) as `sr.rented` from inventory inner join film on film.film_id = inventory.inventory_id
 inner join rental on rental.inventory_id = inventory.inventory_id 
group by film.title order by `sr.rented` desc limit 5;


-- Determine the customers who have rented movies from both stores (store ID 1 and store ID 2).
SELECT customer.customer_id, customer.first_name, customer.last_name
FROM customer
INNER JOIN rental ON customer.customer_id = rental.customer_id
INNER JOIN inventory ON rental.inventory_id = inventory.inventory_id
WHERE inventory.store_id IN (1, 2)
GROUP BY customer.customer_id, customer.first_name, customer.last_name
HAVING count(DISTINCT inventory.store_id) = 2;



















